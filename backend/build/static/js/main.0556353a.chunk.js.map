{"version":3,"sources":["components/UserStory.js","components/ProductBacklog.js","components/AddUserStory.js","components/ModifyUserStory.js","services/userstories.js","App.js","index.js"],"names":["UserStory","userstory","className","story","priority","status","ProductBacklog","stories","map","id","AddUserStory","createNewStory","useState","setStory","setPriority","setStatus","onSubmit","event","preventDefault","type","value","onChange","target","ModifyUserStory","updateUserStory","newPriority","setNewPriority","newStatus","setNewStatus","storyID","filter","s","toLowerCase","console","log","baseUrl","axios","get","then","response","data","newObject","post","put","App","setStories","useEffect","storyService","initialStories","userStoryObject","concat","find","changedStory","returnedStory","ReactDOM","render","document","getElementById"],"mappings":"6JAceA,EAZG,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACnB,OACE,qBAAKC,UAAU,YAAf,SACE,6CACeD,EAAUE,MADzB,IACgC,uBADhC,aAEaF,EAAUG,SAFvB,IAEiC,uBAFjC,WAGWH,EAAUI,aCUZC,EAfQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACxB,OACE,gCACE,iDACA,6BACGA,EAAQC,KAAI,SAAAL,GAAK,OAChB,6BACE,cAAC,EAAD,CAAWF,UAAWE,KADfA,EAAMM,aCmDVC,EA1DM,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACtB,EAA0BC,mBAAS,IAAnC,mBAAOT,EAAP,KAAcU,EAAd,KACA,EAAgCD,mBAAS,IAAzC,mBAAOR,EAAP,KAAiBU,EAAjB,KACA,EAA4BF,mBAAS,OAArC,mBAAOP,EAAP,KAAeU,EAAf,KAiBA,OACE,sBAAKb,UAAU,mBAAf,UACE,oDACA,uBAAMc,SAjBO,SAACC,GAChBA,EAAMC,iBAONP,EALuB,CACrBR,MAAOA,EACPC,SAAUA,EACVC,OAAQA,IAGVQ,EAAS,IACTC,EAAY,IACZC,EAAU,QAMR,UACE,+CAGA,uBAAON,GAAG,cACRU,KAAK,OACLC,MAAOjB,EACPkB,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBT,EAASS,EAAOF,UAE5C,gCACE,6CAGA,uBAAOX,GAAG,iBACRU,KAAK,SACLC,MAAOhB,EACPiB,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBR,EAAYQ,EAAOF,aAGjD,gCACE,2CAGA,uBAAOX,GAAG,eACRU,KAAK,OACLC,MAAOf,EACPgB,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBP,EAAUO,EAAOF,aAI/C,wBAAQD,KAAK,SAAb,kCCMOI,EA3DS,SAAC,GAAmC,IAAhChB,EAA+B,EAA/BA,QAASiB,EAAsB,EAAtBA,gBACnC,EAA0BZ,mBAAS,IAAnC,mBAAOT,EAAP,KAAcU,EAAd,KACA,EAAsCD,mBAAS,IAA/C,mBAAOa,EAAP,KAAoBC,EAApB,KACA,EAAkCd,mBAAS,IAA3C,mBAAOe,EAAP,KAAkBC,EAAlB,KAkBA,OACE,sBAAK1B,UAAU,mBAAf,UACE,mDACA,uBAAMc,SAlBU,SAACC,GACnBA,EAAMC,iBACN,IAAMW,EAAUtB,EAAQuB,QAAO,SAAAC,GAAC,OAAIA,EAAE5B,MAAM6B,gBAAkB7B,EAAM6B,iBAEpE,GADAC,QAAQC,IAAIL,GACRA,EAAQ,GAAI,CACd,IAAMpB,EAAKoB,EAAQ,GAAGpB,GACtBe,EAAgBf,EAAIgB,EAAaE,GAInCd,EAAS,IACTa,EAAe,IACfE,EAAa,KAMX,UACE,yDAGA,uBAAOnB,GAAG,cACRU,KAAK,OACLC,MAAOjB,EACPkB,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBT,EAASS,EAAOF,UAE5C,gCACE,iDAGA,uBAAOX,GAAG,iBACRU,KAAK,SACLC,MAAOK,EACPJ,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBI,EAAeJ,EAAOF,aAGpD,gCACE,+CAGA,uBAAOX,GAAG,eACRU,KAAK,OACLC,MAAOO,EACPN,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBM,EAAaN,EAAOF,aAIlD,wBAAQD,KAAK,SAAb,iC,gBCvDFgB,EAAU,mBAuBD,EArBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAmB5B,EAhBA,SAAAC,GACb,OAAOL,IAAMM,KAAKP,EAASM,IAed,EAZA,SAAChC,EAAIgC,GASlB,OARAR,QAAQC,IAAI,MAAOzB,GACnBwB,QAAQC,IAAIO,GACZR,QAAQC,IAAR,UAAeC,EAAf,YAA0B1B,GAAMgC,GAKhBL,IAAMO,IAAN,UAAaR,EAAb,YAAwB1B,GAAMgC,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCqD5BI,EAnEH,WACV,MAA8BhC,mBAAS,IAAvC,mBAAOL,EAAP,KAAgBsC,EAAhB,KAGAC,qBAAU,WACRC,IAEGT,MAAK,SAAAU,GACJH,EAAWG,QAEd,IA+CH,OACE,gCACE,mDACA,cAAC,EAAD,CAAgBzC,QAASA,IACzB,cAAC,EAAD,CAAcI,eAjDM,SAACsC,GACvBF,EACUE,GACPX,MAAK,SAAAC,GACJM,EAAWtC,EAAQ2C,OAAOX,EAASC,aA8CrC,cAAC,EAAD,CAAiBjC,QAASA,EAASiB,gBAzCf,SAACf,EAAIgB,EAAaE,GACxCM,QAAQC,IAAI,MAAOzB,GACnBwB,QAAQC,IAAI,eAAgBT,GAC5BQ,QAAQC,IAAI,aAAcP,GAI1B,IAAMxB,EAAQI,EAAQ4C,MAAK,SAAApB,GAAC,OAAIA,EAAEtB,KAAOA,KACrC2C,EAAY,eAAQjD,GAIJ,KAAhBsB,GAAoC,KAAdE,GACxBM,QAAQC,IAAI,oBAEM,KAAhBT,GAAoC,KAAdE,IACxBM,QAAQC,IAAI,qBACZkB,EAAY,2BAAQjD,GAAR,IAAeC,SAAUqB,KAEnB,KAAhBA,GAAoC,KAAdE,IACxBM,QAAQC,IAAI,mBACZkB,EAAY,2BAAQjD,GAAR,IAAeE,OAAQsB,KAEjB,KAAhBF,GAAoC,KAAdE,IACxBM,QAAQC,IAAI,gCACZkB,EAAY,2BAAQjD,GAAR,IAAeE,OAAQsB,EAAWvB,SAAUqB,KAG1DsB,EACUtC,EAAI2C,GACXd,MAAK,SAAAe,GACJpB,QAAQC,IAAImB,GACZR,EAAWtC,EAAQC,KAAI,SAAAuB,GAAC,OAAIA,EAAEtB,KAAOA,EAAKsB,EAAIsB,gBCxDtDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0556353a.chunk.js","sourcesContent":["import React from 'react'\n\nconst UserStory = ({ userstory }) => {\n  return (\n    <div className='userstory'>\n      <p>\n        User Story: {userstory.story} <br />\n        Priority: {userstory.priority} <br />\n        Status: {userstory.status}\n      </p>\n    </div>\n  )\n}\n\nexport default UserStory","import React from 'react'\nimport UserStory from './UserStory'\n\nconst ProductBacklog = ({ stories }) => {\n  return (\n    <div>\n      <h2>Product Backlog</h2>\n      <ul>\n        {stories.map(story =>\n          <li key={story.id}>\n            <UserStory userstory={story} />\n          </li>\n        )}\n      </ul>\n    </div>\n  )\n}\n\nexport default ProductBacklog","import React, { useState } from 'react'\n\nconst AddUserStory = ({ createNewStory }) => {\n  const [story, setStory] = useState('')\n  const [priority, setPriority] = useState(99)\n  const [status, setStatus] = useState('new')\n\n\n  const addStory = (event) => {\n    event.preventDefault()\n    // console.log(story)\n    const newStoryObject = {\n      story: story,\n      priority: priority,\n      status: status\n    }\n    createNewStory(newStoryObject)\n    setStory('')\n    setPriority(99)\n    setStatus('new')\n\n  }\n  return (\n    <div className=\"addUserStoryForm\">\n      <h2>Add new User Story</h2>\n      <form onSubmit={addStory}>\n        <label>\n            User Story\n        </label>\n        <input id='story-input'\n          type='text'\n          value={story}\n          onChange={({ target }) => setStory(target.value)}\n        />\n        <div>\n          <label>\n            Priority\n          </label>\n          <input id='priority-input'\n            type='number'\n            value={priority}\n            onChange={({ target }) => setPriority(target.value)}\n          />\n        </div>\n        <div>\n          <label>\n            Status\n          </label>\n          <input id='status-input'\n            type='text'\n            value={status}\n            onChange={({ target }) => setStatus(target.value)}\n          />\n        </div>\n\n        <button type='submit'>Add new story</button>\n      </form>\n    </div>\n  )\n}\nexport default AddUserStory","import React, { useState } from 'react'\n\nconst ModifyUserStory = ( { stories, updateUserStory }) => {\n  const [story, setStory] = useState('')\n  const [newPriority, setNewPriority] = useState('')\n  const [newStatus, setNewStatus] = useState('')\n\n\n  const modifyStory = (event) => {\n    event.preventDefault()\n    const storyID = stories.filter(s => s.story.toLowerCase() === story.toLowerCase())\n    console.log(storyID)\n    if (storyID[0]) {\n      const id = storyID[0].id\n      updateUserStory(id, newPriority, newStatus)\n    }\n\n\n    setStory('')\n    setNewPriority('')\n    setNewStatus('')\n\n  }\n  return (\n    <div className=\"addUserStoryForm\">\n      <h2>Modify User Story</h2>\n      <form onSubmit={modifyStory}>\n        <label>\n            User Story to modify\n        </label>\n        <input id='story-input'\n          type='text'\n          value={story}\n          onChange={({ target }) => setStory(target.value)}\n        />\n        <div>\n          <label>\n            New priority\n          </label>\n          <input id='priority-input'\n            type='number'\n            value={newPriority}\n            onChange={({ target }) => setNewPriority(target.value)}\n          />\n        </div>\n        <div>\n          <label>\n            New Status\n          </label>\n          <input id='status-input'\n            type='text'\n            value={newStatus}\n            onChange={({ target }) => setNewStatus(target.value)}\n          />\n        </div>\n\n        <button type='submit'>Update story</button>\n      </form>\n    </div>\n  )\n}\nexport default ModifyUserStory","import axios from 'axios'\nconst baseUrl = '/api/userstories'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n  console.log('id:', id)\n  console.log(newObject)\n  console.log(`${baseUrl}/${id}`, newObject)\n  //const request = axios.put(`${baseUrl}/${id}`, newObject)\n  //console.log(request)\n  //return request.then(response => response.data)\n  //return axios.put(`${baseUrl}/${id}`, newObject)\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }","import React, { useState, useEffect } from 'react'\nimport ProductBacklog from './components/ProductBacklog'\nimport AddUserStory from './components/AddUserStory'\nimport ModifyUserStory from './components/ModifyUserStory'\nimport storyService from './services/userstories'\n\n\nconst App = () => {\n  const [stories, setStories] = useState([])\n\n\n  useEffect(() => {\n    storyService\n      .getAll()\n      .then(initialStories => {\n        setStories(initialStories)\n      })\n  }, [])\n\n  const createUserStory = (userStoryObject) => {\n    storyService\n      .create(userStoryObject)\n      .then(response => {\n        setStories(stories.concat(response.data))\n      })\n\n  }\n\n  const updateUserStory = (id, newPriority, newStatus) => {\n    console.log('id:', id)\n    console.log('newPriority:', newPriority)\n    console.log('newStatus:', newStatus)\n    //const storyID = stories.filter(s => s.story.toLowerCase() === story.toLowerCase())\n    //console.log(storyID)\n    //const id = storyID[0].id\n    const story = stories.find(s => s.id === id)\n    let changedStory = { ...story }\n    //let changedStory = { ...story, status: newStatus, priority: newPriority }\n    // console.log(story)\n    // let modifiedData = null\n    if (newPriority === '' && newStatus === '') {\n      console.log('No changes made!')\n    }\n    if (newPriority !== '' && newStatus === '') {\n      console.log('Changing priority')\n      changedStory = { ...story, priority: newPriority }\n    }\n    if (newPriority === '' && newStatus !== '') {\n      console.log('Changing status')\n      changedStory = { ...story, status: newStatus }\n    }\n    if (newPriority !== '' && newStatus !== '') {\n      console.log('Changing priority and status')\n      changedStory = { ...story, status: newStatus, priority: newPriority }\n    }\n\n    storyService\n      .update(id, changedStory)\n      .then(returnedStory => {\n        console.log(returnedStory)\n        setStories(stories.map(s => s.id !== id ? s : returnedStory))\n      })\n  }\n\n  return (\n    <div>\n      <h1>Scrum Tracker app</h1>\n      <ProductBacklog stories={stories} />\n      <AddUserStory createNewStory={createUserStory} />\n      <ModifyUserStory stories={stories} updateUserStory={updateUserStory} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}