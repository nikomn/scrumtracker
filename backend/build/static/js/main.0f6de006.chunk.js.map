{"version":3,"sources":["components/AddStoryToBacklog.js","components/ModifyUserStory.js","components/Task.js","components/AddTask.js","components/UserStory.js","components/ProductBacklog.js","components/AddSprintBacklog.js","components/SprintBacklogList.js","components/AddUserStory.js","services/userstories.js","services/sprintbacklogs.js","components/AddMaintenanceStory.js","components/SprintBacklog.js","App.js","index.js"],"names":["AddStoryToBacklog","userstory","backlogs","addStoryToSprintBacklog","useState","sprintBacklog","setSprintBacklog","className","onSubmit","event","preventDefault","id","value","onChange","target","map","b","name","type","ModifyUserStory","story","updateUserStory","newPriority","setNewPriority","status","newStatus","setNewStatus","Form","Group","Label","Control","placeholder","Button","variant","UserStory","task","AddTask","createNewTask","setTask","setStatus","storyView","addTaskToStory","priority","Table","striped","hover","tasks","Task","ProductBacklog","stories","deleteUserStory","filteredStories","filter","s","to","onClick","AddSprintBacklog","createSprintBacklog","backlog","setBacklog","SprintBacklogList","AddUserStory","createNewStory","setStory","setPriority","baseUrl","axios","get","then","response","data","newObject","post","console","log","put","delete","AddMaintenanceStory","createMaintenanceStory","addStory","a","SprintBacklog","userstories","App","setStories","setBacklogs","useEffect","storyService","initialStories","backlogService","initialBacklogs","createUserStory","userStoryObject","concat","storyObject","backlogToAdd","find","alert","taskObject","storyToAdd","st","padding","match","useRouteMatch","params","matchStory","style","path","changedStory","returnedStory","backlogObject","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f6de006.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst AddStoryToBacklog = ({ userstory, backlogs, addStoryToSprintBacklog }) => {\n  const [sprintBacklog, setSprintBacklog] = useState('')\n\n  const addToBacklog = (event) => {\n    event.preventDefault()\n    // console.log(story)\n    addStoryToSprintBacklog(userstory, sprintBacklog)\n    setSprintBacklog('')\n\n  }\n  return (\n    <div className=\"addToSprintBacklog\">\n      <h5>Add story to Sprint backlog</h5>\n      <form onSubmit={addToBacklog}>\n        <select\n          id='dropdown'\n          value={sprintBacklog}\n          onChange={({ target }) => setSprintBacklog(target.value)}\n        >\n          <option value='select sprint backlog'>select sprint backlog</option>\n          {backlogs.map(b =>\n            <option value={b.id} key={b.id}>{b.name}</option>\n          )}\n        </select>\n        <div>\n          <button type=\"submit\">Add to sprintbacklog</button>\n        </div>\n      </form>\n\n    </div>\n  )\n}\nexport default AddStoryToBacklog","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst ModifyUserStory = ( { story, updateUserStory }) => {\n  const [newPriority, setNewPriority] = useState('')\n  const [newStatus, setNewStatus] = useState(story.status)\n\n\n  const modifyStory = (event) => {\n    event.preventDefault()\n    updateUserStory(story.id, newPriority, newStatus)\n    setNewPriority('')\n\n  }\n  return (\n    <div className=\"addUserStoryForm\">\n      <h2>Modify User Story</h2>\n      <Form onSubmit={modifyStory}>\n        <Form.Group>\n          <Form.Label>New priority</Form.Label>\n          <Form.Control\n            id='modify-priority-input'\n            type=\"number\"\n            name=\"priority\"\n            value={newPriority}\n            placeholder=\"New priority\"\n            onChange={({ target }) => setNewPriority(target.value)}\n          />\n          <div>New Status</div>\n          {story.type === 'story' ? (\n            <p>\n              <select\n                id='modify-status-dropdown'\n                value={newStatus}\n                onChange={({ target }) => setNewStatus(target.value)}\n              >\n                <option value='new'>new</option>\n                <option value='planned'>planned</option>\n                <option value='done'>done</option>\n              </select>\n            </p>\n\n          ) : (\n            <p>\n              <select\n                id='modify-status-dropdown'\n                value={newStatus}\n                onChange={({ target }) => setNewStatus(target.value)}\n              >\n                <option value='waiting'>waiting</option>\n                <option value='doing'>doing</option>\n                <option value='done'>done</option>\n              </select>\n            </p>\n\n          )}\n\n          <Button variant=\"success\" type=\"submit\">\n          Update story\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\nexport default ModifyUserStory","import React from 'react'\n\nconst UserStory = ({ task }) => {\n  if (!task) {\n    return null\n  }\n  return (\n    <div className='task'>\n      <p>\n        <b>Task:</b> {task.name} <br />\n        <b>Status:</b> {task.status}\n      </p>\n    </div>\n  )\n}\n\nexport default UserStory","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst AddTask = ({ createNewTask, story }) => {\n  const [task, setTask] = useState('')\n  const [status, setStatus] = useState('new')\n\n\n  const addTask = (event) => {\n    event.preventDefault()\n    const newTaskObject = {\n      name: task,\n      status: status\n    }\n    createNewTask(newTaskObject, story)\n    setTask('')\n    setStatus('new')\n\n  }\n  return (\n    <div className=\"addTaskForm\">\n      <h2>Add new Task</h2>\n      <Form onSubmit={addTask}>\n        <Form.Group>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            id='task-input'\n            type=\"text\"\n            name=\"task\"\n            value={task}\n            placeholder=\"New task\"\n            onChange={({ target }) => setTask(target.value)}\n          />\n          <div>Status</div>\n          <p>\n            <select\n              id='task-status-dropdown'\n              value={status}\n              onChange={({ target }) => setStatus(target.value)}\n            >\n              <option value='waiting'>waiting</option>\n              <option value='doing'>doing</option>\n              <option value='done'>done</option>\n            </select>\n          </p>\n          <Button variant=\"success\" type=\"submit\">\n            Add new task\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\nexport default AddTask","import React from 'react'\n// import React, { useState } from 'react'\nimport { Table } from 'react-bootstrap'\nimport AddStoryToBacklog from './AddStoryToBacklog'\nimport ModifyUserStory from './ModifyUserStory'\nimport Task from './Task'\nimport AddTask from './AddTask'\n\nconst UserStory = (\n  {\n    userstory,\n    backlogs,\n    addStoryToSprintBacklog,\n    updateUserStory,\n    storyView,\n    addTaskToStory\n  }) => {\n  // const [sprintBacklog, setSprintBacklog] = useState('')\n\n  // const addToBacklog = (event) => {\n  //   event.preventDefault()\n  //   // console.log(story)\n  //   addStoryToSprintBacklog(userstory)\n  //   setSprintBacklog('')\n\n  // }\n\n  if (!userstory) {\n    return null\n  }\n  return (\n    <div className='userstory'>\n      {storyView !== null ? (\n        <div>\n          <h1>{userstory.story}</h1>\n          <p>\n            <b>User Story:</b> {userstory.story} <br />\n            <b>Priority:</b> {userstory.priority} <br />\n            <b>Status:</b> {userstory.status}\n          </p>\n          <ModifyUserStory story={userstory} updateUserStory={updateUserStory} />\n          <h2>Technical tasks</h2>\n          <Table striped hover>\n            <tbody>\n              {userstory.tasks.map(task =>\n                <tr key={task.id}>\n                  <td>\n                    <Task task={task} />\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n          <AddTask createNewTask={addTaskToStory} story={userstory.id} />\n        </div>\n      ) : (\n        <div>\n          <p>\n            <b>User Story:</b> {userstory.story} <br />\n            <b>Priority:</b> {userstory.priority} <br />\n            <b>Status:</b> {userstory.status}\n          </p>\n          <AddStoryToBacklog\n            userstory={userstory}\n            backlogs={backlogs}\n            addStoryToSprintBacklog={addStoryToSprintBacklog}\n          />\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default UserStory","import React from 'react'\nimport { Table, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport UserStory from './UserStory'\n\nconst ProductBacklog = ({ stories, deleteUserStory, backlogs, addStoryToSprintBacklog }) => {\n  const filteredStories = stories.filter(s => s.type === 'story')\n  return (\n    <div>\n      <h2>Product Backlog</h2>\n      <Table striped hover>\n        <tbody>\n          {filteredStories.map(story =>\n            <tr key={story.id}>\n              <td>\n                <UserStory\n                  userstory={story}\n                  backlogs={backlogs}\n                  addStoryToSprintBacklog={addStoryToSprintBacklog}\n                  storyView={null}\n                />\n              </td>\n              <td>\n                <p>\n                  <Link to={`/userstories/${story.id}`} className=\"btn btn-success\">Info</Link>\n                </p>\n                <p>\n                  <Button variant=\"danger\" onClick={() => deleteUserStory(story.id)}>delete</Button>\n                </p>\n              </td>\n\n            </tr>\n          )}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nexport default ProductBacklog","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst AddSprintBacklog = ({ createSprintBacklog }) => {\n  const [backlog, setBacklog] = useState('')\n\n  const addBacklog = (event) => {\n    event.preventDefault()\n    // console.log(story)\n    const newBacklogObject = {\n      name: backlog,\n    }\n    createSprintBacklog(newBacklogObject)\n    setBacklog('')\n\n  }\n  return (\n    <div className=\"createSprintBacklog\">\n      <h2>Add new Sprint backlog</h2>\n      <Form onSubmit={addBacklog}>\n        <Form.Group>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            id='backlog-input'\n            type=\"text\"\n            name=\"backlog\"\n            value={backlog}\n            placeholder=\"New Sprint backlog\"\n            onChange={({ target }) => setBacklog(target.value)}\n          />\n\n          <Button variant=\"success\" type=\"submit\">\n          Create\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\nexport default AddSprintBacklog","import React from 'react'\nimport { Table } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport AddSprintBacklog from './AddSprintBacklog'\n\n\nconst SprintBacklogList = ({ backlogs, createSprintBacklog }) => {\n  return (\n    <div>\n      <h2>Sprint Backlogs</h2>\n      <Table striped hover>\n        <tbody>\n          {backlogs.map(backlog =>\n            <tr key={backlog.id}>\n              <td>\n                <Link to={`/sprintbacklogs/${backlog.id}`}>{backlog.name}</Link>\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n      <AddSprintBacklog createSprintBacklog={createSprintBacklog} />\n    </div>\n  )\n}\n\nexport default SprintBacklogList","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst AddUserStory = ({ createNewStory }) => {\n  const [story, setStory] = useState('')\n  const [priority, setPriority] = useState(99)\n  const [status, setStatus] = useState('new')\n\n\n  const addStory = (event) => {\n    event.preventDefault()\n    // console.log(story)\n    const newStoryObject = {\n      story: story,\n      priority: priority,\n      status: status,\n      type: 'story'\n    }\n    createNewStory(newStoryObject)\n    setStory('')\n    setPriority(99)\n    setStatus('new')\n\n  }\n  return (\n    <div className=\"addUserStoryForm\">\n      <h2>Add new User Story</h2>\n      <Form onSubmit={addStory}>\n        <Form.Group>\n          <Form.Label>User Story</Form.Label>\n          <Form.Control\n            id='story-input'\n            type=\"text\"\n            name=\"userstory\"\n            value={story}\n            placeholder=\"New user story\"\n            onChange={({ target }) => setStory(target.value)}\n          />\n          <Form.Label>Priority</Form.Label>\n          <Form.Control\n            id='priority-input'\n            type=\"number\"\n            name=\"priority\"\n            value={priority}\n            placeholder=\"Priority\"\n            onChange={({ target }) => setPriority(target.value)}\n          />\n          <div>Status</div>\n          <p>\n            <select\n              id='status-dropdown'\n              value={status}\n              onChange={({ target }) => setStatus(target.value)}\n            >\n              <option value='new'>new</option>\n              <option value='planned'>planned</option>\n              <option value='done'>done</option>\n            </select>\n          </p>\n          <Button variant=\"success\" type=\"submit\">\n            Add new story\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\nexport default AddUserStory","import axios from 'axios'\nconst baseUrl = '/api/userstories'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n  console.log('id:', id)\n  console.log(newObject)\n  console.log(`${baseUrl}/${id}`, newObject)\n  //const request = axios.put(`${baseUrl}/${id}`, newObject)\n  //console.log(request)\n  //return request.then(response => response.data)\n  //return axios.put(`${baseUrl}/${id}`, newObject)\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst addTask = (id, task) => {\n  const request = axios.post(`${baseUrl}/${id}/tasks`, task)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove, addTask }","import axios from 'axios'\nconst baseUrl = '/api/sprintbacklogs'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst addStory = (id, story) => {\n  const request = axios.post(`${baseUrl}/${id}/stories`, story)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, addStory }","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst AddMaintenanceStory = ({ backlog, createMaintenanceStory }) => {\n  const [story, setStory] = useState('')\n  const [priority, setPriority] = useState(99)\n  const [status, setStatus] = useState('new')\n\n\n  const addStory = async (event) => {\n    event.preventDefault()\n    // console.log(story)\n    const newStoryObject = {\n      story: story,\n      priority: priority,\n      status: status,\n      type: 'other'\n    }\n    createMaintenanceStory(newStoryObject, backlog)\n\n    setStory('')\n    setPriority(99)\n    setStatus('new')\n\n  }\n  return (\n    <div className=\"addUserStoryForm\">\n      <h2>Add maintenance story</h2>\n      <Form onSubmit={addStory}>\n        <Form.Group>\n          <Form.Label>User Story</Form.Label>\n          <Form.Control\n            id='story-input'\n            type=\"text\"\n            name=\"userstory\"\n            value={story}\n            placeholder=\"New user story\"\n            onChange={({ target }) => setStory(target.value)}\n          />\n          <Form.Label>Priority</Form.Label>\n          <Form.Control\n            id='priority-input'\n            type=\"number\"\n            name=\"priority\"\n            value={priority}\n            placeholder=\"Priority\"\n            onChange={({ target }) => setPriority(target.value)}\n          />\n          <div>Status</div>\n          <p>\n            <select\n              id='status-dropdown'\n              value={status}\n              onChange={({ target }) => setStatus(target.value)}\n            >\n              <option value='new'>new</option>\n              <option value='planned'>planned</option>\n              <option value='done'>done</option>\n            </select>\n          </p>\n          <Button variant=\"success\" type=\"submit\">\n            Add new story\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\nexport default AddMaintenanceStory","import React from 'react'\nimport { Table, Button } from 'react-bootstrap'\nimport UserStory from './UserStory'\nimport AddMaintenanceStory from './AddMaintenanceStory'\nimport { Link } from 'react-router-dom'\n\nconst SprintBacklog = ({ backlog, backlogs, addStoryToSprintBacklog, deleteUserStory, createMaintenanceStory }) => {\n  if (!backlog) {\n    return null\n  }\n  return (\n    <div>\n      <h2>Sprint Backlog for {backlog.name}</h2>\n      <Table striped hover>\n        <tbody>\n          {backlog.userstories.map(story =>\n            <tr key={story.id}>\n              <td>\n                <UserStory\n                  userstory={story}\n                  backlogs={backlogs}\n                  addStoryToSprintBacklog={addStoryToSprintBacklog}\n                  storyView={null}\n                />\n              </td>\n              <td>\n                <p>\n                  <Link to={`/userstories/${story.id}`} className=\"btn btn-success\">Info</Link>\n                </p>\n                <p>\n                  <Button variant=\"danger\" onClick={() => deleteUserStory(story.id)}>delete</Button>\n                </p>\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n      <AddMaintenanceStory backlog={backlog} createMaintenanceStory={createMaintenanceStory} />\n    </div>\n  )\n}\n\nexport default SprintBacklog","import React, { useState, useEffect } from 'react'\nimport ProductBacklog from './components/ProductBacklog'\nimport SprintBacklogList from './components/SprintBacklogList'\nimport AddUserStory from './components/AddUserStory'\n//import ModifyUserStory from './components/ModifyUserStory'\nimport storyService from './services/userstories'\nimport backlogService from './services/sprintbacklogs'\n\nimport {\n  Switch, Route, Link, useRouteMatch\n} from 'react-router-dom'\nimport SprintBacklog from './components/SprintBacklog'\nimport UserStory from './components/UserStory'\n\nconst App = () => {\n  const [stories, setStories] = useState([])\n  const [backlogs, setBacklogs] = useState([])\n\n\n  useEffect(() => {\n    //console.log('use effect!')\n    storyService\n      .getAll()\n      .then(initialStories => {\n        setStories(initialStories)\n      })\n    backlogService\n      .getAll()\n      .then(initialBacklogs => {\n        setBacklogs(initialBacklogs)\n      })\n  }, [])\n\n  const createUserStory = async (userStoryObject) => {\n    await storyService\n      .create(userStoryObject)\n      .then(response => {\n        setStories(stories.concat(response.data))\n      })\n\n  }\n\n  const createMaintenanceStory = async (userStoryObject, backlog) => {\n    await storyService\n      .create(userStoryObject)\n      .then(response => {\n        setStories(stories.concat(response.data))\n        addStoryToSprintBacklog(response.data, backlog.id)\n      })\n\n  }\n\n  const deleteUserStory = (id) => {\n    //console.log('Story ' + id + ' will be removed...')\n    storyService\n      .remove(id)\n      // eslint-disable-next-line no-unused-vars\n      .then(response => {\n        setStories(stories.filter(s => s.id !== id))\n      })\n  }\n\n  const updateUserStory = (id, newPriority, newStatus) => {\n    // console.log('id:', id)\n    // console.log('newPriority:', newPriority)\n    // console.log('newStatus:', newStatus)\n    if (id) {\n      const story = stories.find(s => s.id === id)\n      let changedStory = { ...story }\n      if (newPriority === '' && newStatus === '') {\n        //console.log('No changes made!')\n      }\n      if (newPriority !== '' && newStatus === '') {\n        //console.log('Changing priority')\n        changedStory = { ...story, priority: newPriority }\n      }\n      if (newPriority === '' && newStatus !== '') {\n        //console.log('Changing status')\n        changedStory = { ...story, status: newStatus }\n      }\n      if (newPriority !== '' && newStatus !== '') {\n        //console.log('Changing priority and status')\n        changedStory = { ...story, status: newStatus, priority: newPriority }\n      }\n\n      storyService\n        .update(id, changedStory)\n        .then(returnedStory => {\n          console.log(returnedStory)\n          setStories(stories.map(s => s.id !== id ? s : returnedStory))\n        })\n    }\n  }\n\n  const createSprintBacklog = (backlogObject) => {\n    backlogService\n      .create(backlogObject)\n      .then(response => {\n        setBacklogs(backlogs.concat(response.data))\n      })\n\n  }\n\n  const addStoryToSprintBacklog = async (storyObject, backlog) => {\n    console.log(storyObject)\n    if (backlog !== '') {\n      const backlogToAdd = backlogs.find(b => b.id === backlog)\n      console.log(backlogToAdd)\n      if (!backlogToAdd.userstories.find(s => s.id === storyObject.id)) {\n        await backlogService\n          .addStory(backlog, storyObject)\n          .then(response => {\n            //console.log(response)\n            //console.log(backlogs)\n            setBacklogs(backlogs.map(b => b.id !== backlog ? b : response))\n          })\n        alert('Story \"' + storyObject.story + '\" added to sprint backlog ' + backlogToAdd.name)\n\n      } else {\n        alert('Story \"' + storyObject.story + '\" already in sprint backlog ' + backlogToAdd.name)\n      }\n\n    } else {\n      alert('Select backlog from the dropdown menu')\n    }\n\n  }\n\n  const addTaskToStory = async (taskObject, story) => {\n    const storyToAdd = stories.find(st => st.id === story)\n\n    await storyService\n      .addTask(story, taskObject)\n      .then(response => {\n        setStories(stories.map(s => s.id !== story ? s : response))\n      })\n    alert('Task \"' + taskObject.name + '\" added to story ' + storyToAdd.story)\n\n  }\n\n\n\n\n  const padding = {\n    padding: 5\n  }\n\n  const match = useRouteMatch('/sprintbacklogs/:id')\n  const backlog = match\n    ? backlogs.find(b => b.id === match.params.id)\n    : null\n\n  //console.log(stories)\n  const matchStory = useRouteMatch('/userstories/:id')\n  //console.log(matchStory)\n  const userstory = matchStory\n    ? stories.find(s => s.id === matchStory.params.id)\n    : null\n\n  //console.log(stories)\n\n  return (\n    <div className=\"container\">\n      <div>\n        <Link style={padding} to=\"/\">product backlog</Link>\n        <Link style={padding} to=\"/sprintbacklogs\">sprint backlogs</Link>\n      </div>\n\n      <Switch>\n        <Route path=\"/sprintbacklogs/:id\">\n          <SprintBacklog\n            backlog={backlog}\n            backlogs={backlogs}\n            addStoryToSprintBacklog={addStoryToSprintBacklog}\n            deleteUserStory={deleteUserStory}\n            createMaintenanceStory={createMaintenanceStory}\n          />\n        </Route>\n        <Route path=\"/userstories/:id\">\n          <UserStory\n            userstory={userstory}\n            backlogs={backlogs}\n            addStoryToSprintBacklog={addStoryToSprintBacklog}\n            updateUserStory={updateUserStory}\n            storyView={''}\n            addTaskToStory={addTaskToStory}\n          />\n        </Route>\n        <Route path=\"/sprintbacklogs\">\n          <SprintBacklogList\n            backlogs={backlogs}\n            createSprintBacklog={createSprintBacklog} />\n        </Route>\n        <Route path=\"/\">\n          <ProductBacklog\n            stories={stories}\n            deleteUserStory={deleteUserStory}\n            backlogs={backlogs}\n            addStoryToSprintBacklog={addStoryToSprintBacklog} />\n          <AddUserStory createNewStory={createUserStory} />\n          {/* <ModifyUserStory stories={stories} updateUserStory={updateUserStory} /> */}\n        </Route>\n      </Switch>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport {\n  BrowserRouter as Router\n} from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n)"],"sourceRoot":""}