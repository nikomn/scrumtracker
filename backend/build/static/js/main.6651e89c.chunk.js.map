{"version":3,"sources":["components/AddStoryToBacklog.js","components/ModifyUserStory.js","components/Task.js","components/AddTask.js","components/Comment.js","components/AddComment.js","components/UserStory.js","components/ProductBacklog.js","components/AddSprintBacklog.js","components/SprintBacklogList.js","components/AddUserStory.js","components/loginForm.js","services/userstories.js","services/sprintbacklogs.js","services/login.js","components/AddMaintenanceStory.js","components/SprintBacklog.js","App.js","index.js"],"names":["AddStoryToBacklog","userstory","backlogs","addStoryToSprintBacklog","useState","sprintBacklog","setSprintBacklog","className","onSubmit","event","preventDefault","id","value","onChange","target","map","b","name","type","ModifyUserStory","story","updateUserStory","priority","newPriority","setNewPriority","status","newStatus","setNewStatus","storypoints","newStorypoints","setNewStorypoints","Form","Group","Label","Control","placeholder","Button","variant","Task","task","AddTask","createNewTask","setTask","setStatus","Comment","comment","date","commentText","AddComment","createNewComment","setComment","UserStory","storyView","addTaskToStory","addCommentToStory","Table","striped","hover","tasks","comments","ProductBacklog","stories","deleteUserStory","filteredStories","filter","s","to","onClick","AddSprintBacklog","createSprintBacklog","backlog","setBacklog","SprintBacklogList","AddUserStory","createNewStory","setStory","setPriority","setStorypoints","Login","handleLogin","username","setUsername","password","setPassword","alert","baseUrl","token","axios","get","then","response","data","newObject","config","headers","Authorization","post","console","log","put","delete","newToken","login","credentials","a","AddMaintenanceStory","createMaintenanceStory","addStory","SprintBacklog","userstories","App","setStories","setBacklogs","user","setUser","useEffect","storyService","initialStories","backlogService","initialBacklogs","loggedUserJSON","window","localStorage","getItem","JSON","parse","loginService","setItem","stringify","createUserStory","userStoryObject","concat","storyObject","backlogToAdd","find","taskObject","storyToAdd","st","commentObject","padding","match","useRouteMatch","params","matchStory","style","clear","path","newData","returnedStory","backlogObject","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6651e89c.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst AddStoryToBacklog = ({ userstory, backlogs, addStoryToSprintBacklog }) => {\n  const [sprintBacklog, setSprintBacklog] = useState('')\n\n  const addToBacklog = (event) => {\n    event.preventDefault()\n    // console.log(story)\n    addStoryToSprintBacklog(userstory, sprintBacklog)\n    setSprintBacklog('')\n\n  }\n  return (\n    <div className=\"addToSprintBacklog\">\n      <h5>Add story to Sprint backlog</h5>\n      <form onSubmit={addToBacklog}>\n        <select\n          id='dropdown'\n          value={sprintBacklog}\n          onChange={({ target }) => setSprintBacklog(target.value)}\n        >\n          <option value='select sprint backlog'>select sprint backlog</option>\n          {backlogs.map(b =>\n            <option value={b.id} key={b.id}>{b.name}</option>\n          )}\n        </select>\n        <div>\n          <button type=\"submit\">Add to sprintbacklog</button>\n        </div>\n      </form>\n\n    </div>\n  )\n}\nexport default AddStoryToBacklog","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst ModifyUserStory = ( { story, updateUserStory }) => {\n  const [newPriority, setNewPriority] = useState(story.priority)\n  const [newStatus, setNewStatus] = useState(story.status)\n  const [newStorypoints, setNewStorypoints] = useState(story.storypoints)\n\n\n  const modifyStory = (event) => {\n    event.preventDefault()\n    updateUserStory(story.id, newPriority, newStatus, newStorypoints)\n    setNewPriority('')\n    setNewStorypoints(0)\n\n  }\n  return (\n    <div className=\"addUserStoryForm\">\n      <h2>Modify User Story</h2>\n      <Form onSubmit={modifyStory}>\n        <Form.Group>\n          <Form.Label>New priority</Form.Label>\n          <Form.Control\n            id='modify-priority-input'\n            type=\"number\"\n            name=\"priority\"\n            value={newPriority}\n            placeholder=\"New priority\"\n            onChange={({ target }) => setNewPriority(target.value)}\n          />\n          <Form.Label>New storypoints</Form.Label>\n          <Form.Control\n            id='modify-storypoint-input'\n            type=\"number\"\n            name=\"storypoints\"\n            value={newStorypoints}\n            placeholder=\"New storypoints\"\n            onChange={({ target }) => setNewStorypoints(target.value)}\n          />\n          <div>New Status</div>\n          {story.type === 'story' ? (\n            <p>\n              <select\n                id='modify-status-dropdown'\n                value={newStatus}\n                onChange={({ target }) => setNewStatus(target.value)}\n              >\n                <option value='new'>new</option>\n                <option value='planned'>planned</option>\n                <option value='done'>done</option>\n              </select>\n            </p>\n\n          ) : (\n            <p>\n              <select\n                id='modify-status-dropdown'\n                value={newStatus}\n                onChange={({ target }) => setNewStatus(target.value)}\n              >\n                <option value='waiting'>waiting</option>\n                <option value='doing'>doing</option>\n                <option value='done'>done</option>\n              </select>\n            </p>\n\n          )}\n\n          <Button variant=\"success\" type=\"submit\">\n          Update story\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\nexport default ModifyUserStory","import React from 'react'\n\nconst Task = ({ task }) => {\n  if (!task) {\n    return null\n  }\n  return (\n    <div className='task'>\n      <p>\n        <b>Task:</b> {task.name} <br />\n        <b>Status:</b> {task.status}\n      </p>\n    </div>\n  )\n}\n\nexport default Task","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst AddTask = ({ createNewTask, story }) => {\n  const [task, setTask] = useState('')\n  const [status, setStatus] = useState('waiting')\n\n\n  const addTask = (event) => {\n    event.preventDefault()\n    const newTaskObject = {\n      name: task,\n      status: status\n    }\n    createNewTask(newTaskObject, story)\n    setTask('')\n    setStatus('waiting')\n\n  }\n  return (\n    <div className=\"addTaskForm\">\n      <h2>Add new Task</h2>\n      <Form onSubmit={addTask}>\n        <Form.Group>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            id='task-input'\n            type=\"text\"\n            name=\"task\"\n            value={task}\n            placeholder=\"New task\"\n            onChange={({ target }) => setTask(target.value)}\n          />\n          <div>Status</div>\n          <p>\n            <select\n              id='task-status-dropdown'\n              value={status}\n              onChange={({ target }) => setStatus(target.value)}\n            >\n              <option value='waiting'>waiting</option>\n              <option value='doing'>doing</option>\n              <option value='done'>done</option>\n            </select>\n          </p>\n          <Button variant=\"success\" type=\"submit\">\n            Add new task\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\nexport default AddTask","import React from 'react'\n\nconst Comment = ({ comment }) => {\n  if (!comment) {\n    return null\n  }\n  return (\n    <div className='comment'>\n      <p>\n        <b>{comment.date}:</b> {comment.commentText}\n      </p>\n    </div>\n  )\n}\n\nexport default Comment","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst AddComment = ({ createNewComment, story }) => {\n  const [comment, setComment] = useState('')\n\n\n  const addComment = (event) => {\n    event.preventDefault()\n    const newCommentObject = {\n      commentText: comment\n    }\n    createNewComment(newCommentObject, story)\n    setComment('')\n\n  }\n  return (\n    <div className=\"addCommentForm\">\n      <h2>Add new Comment</h2>\n      <Form onSubmit={addComment}>\n        <Form.Group>\n          <Form.Label>Comment</Form.Label>\n          <Form.Control\n            id='comment-input'\n            type=\"text\"\n            name=\"comment\"\n            value={comment}\n            placeholder=\"New comment\"\n            onChange={({ target }) => setComment(target.value)}\n          />\n          <Button variant=\"success\" type=\"submit\">\n            Add new comment\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\nexport default AddComment","import React from 'react'\n// import React, { useState } from 'react'\nimport { Table } from 'react-bootstrap'\nimport AddStoryToBacklog from './AddStoryToBacklog'\nimport ModifyUserStory from './ModifyUserStory'\nimport Task from './Task'\nimport AddTask from './AddTask'\nimport Comment from './Comment'\nimport AddComment from './AddComment'\n\nconst UserStory = (\n  {\n    userstory,\n    backlogs,\n    addStoryToSprintBacklog,\n    updateUserStory,\n    storyView,\n    addTaskToStory,\n    addCommentToStory\n  }) => {\n  // const [sprintBacklog, setSprintBacklog] = useState('')\n\n  // const addToBacklog = (event) => {\n  //   event.preventDefault()\n  //   // console.log(story)\n  //   addStoryToSprintBacklog(userstory)\n  //   setSprintBacklog('')\n\n  // }\n\n  if (!userstory) {\n    return null\n  }\n  return (\n    <div className='userstory'>\n      {storyView !== null ? (\n        <div>\n          <h1>{userstory.story}</h1>\n          <p>\n            <b>User Story:</b> {userstory.story} <br />\n            <b>Priority:</b> {userstory.priority} <br />\n            <b>Storypoints:</b> {userstory.storypoints} <br />\n            <b>Status:</b> {userstory.status}\n          </p>\n          <ModifyUserStory story={userstory} updateUserStory={updateUserStory} />\n          <h2>Technical tasks</h2>\n          <Table striped hover>\n            <tbody>\n              {userstory.tasks.map(task =>\n                <tr key={task.id}>\n                  <td>\n                    <Task task={task} />\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n          <AddTask createNewTask={addTaskToStory} story={userstory.id} />\n          <h2>Comments</h2>\n          <Table striped hover>\n            <tbody>\n              {userstory.comments.map(comment =>\n                <tr key={comment.id}>\n                  <td>\n                    <Comment comment={comment} />\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n          <AddComment createNewComment={addCommentToStory} story={userstory.id} />\n        </div>\n      ) : (\n        <div>\n          <p>\n            <b>User Story:</b> {userstory.story} <br />\n            <b>Priority:</b> {userstory.priority} <br />\n            <b>Storypoints:</b> {userstory.storypoints} <br />\n            <b>Status:</b> {userstory.status}\n          </p>\n          <AddStoryToBacklog\n            userstory={userstory}\n            backlogs={backlogs}\n            addStoryToSprintBacklog={addStoryToSprintBacklog}\n          />\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default UserStory","import React from 'react'\nimport { Table, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport UserStory from './UserStory'\n\nconst ProductBacklog = ({ stories, deleteUserStory, backlogs, addStoryToSprintBacklog }) => {\n  const filteredStories = stories.filter(s => s.type === 'story')\n  return (\n    <div>\n      <h2>Product Backlog</h2>\n      <Table striped hover>\n        <tbody>\n          {filteredStories.map(story =>\n            <tr key={story.id}>\n              <td>\n                <UserStory\n                  userstory={story}\n                  backlogs={backlogs}\n                  addStoryToSprintBacklog={addStoryToSprintBacklog}\n                  storyView={null}\n                />\n              </td>\n              <td>\n                <p>\n                  <Link to={`/userstories/${story.id}`} className=\"btn btn-success\">Info</Link>\n                </p>\n                <p>\n                  <Button variant=\"danger\" onClick={() => deleteUserStory(story.id)}>delete</Button>\n                </p>\n              </td>\n\n            </tr>\n          )}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nexport default ProductBacklog","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst AddSprintBacklog = ({ createSprintBacklog }) => {\n  const [backlog, setBacklog] = useState('')\n\n  const addBacklog = (event) => {\n    event.preventDefault()\n    // console.log(story)\n    const newBacklogObject = {\n      name: backlog,\n    }\n    createSprintBacklog(newBacklogObject)\n    setBacklog('')\n\n  }\n  return (\n    <div className=\"createSprintBacklog\">\n      <h2>Add new Sprint backlog</h2>\n      <Form onSubmit={addBacklog}>\n        <Form.Group>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            id='backlog-input'\n            type=\"text\"\n            name=\"backlog\"\n            value={backlog}\n            placeholder=\"New Sprint backlog\"\n            onChange={({ target }) => setBacklog(target.value)}\n          />\n\n          <Button variant=\"success\" type=\"submit\">\n          Create\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\nexport default AddSprintBacklog","import React from 'react'\nimport { Table } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport AddSprintBacklog from './AddSprintBacklog'\n\n\nconst SprintBacklogList = ({ backlogs, createSprintBacklog }) => {\n  return (\n    <div>\n      <h2>Sprint Backlogs</h2>\n      <Table striped hover>\n        <tbody>\n          {backlogs.map(backlog =>\n            <tr key={backlog.id}>\n              <td>\n                <Link to={`/sprintbacklogs/${backlog.id}`}>{backlog.name}</Link>\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n      <AddSprintBacklog createSprintBacklog={createSprintBacklog} />\n    </div>\n  )\n}\n\nexport default SprintBacklogList","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst AddUserStory = ({ createNewStory }) => {\n  const [story, setStory] = useState('')\n  const [priority, setPriority] = useState(99)\n  const [storypoints, setStorypoints] = useState(0)\n  const [status, setStatus] = useState('new')\n\n\n  const addStory = (event) => {\n    event.preventDefault()\n    // console.log(story)\n    const newStoryObject = {\n      story: story,\n      priority: priority,\n      storypoints: storypoints,\n      status: status,\n      type: 'story'\n    }\n    createNewStory(newStoryObject)\n    setStory('')\n    setPriority(99)\n    setStorypoints(0)\n    setStatus('new')\n\n  }\n  return (\n    <div className=\"addUserStoryForm\">\n      <h2>Add new User Story</h2>\n      <Form onSubmit={addStory}>\n        <Form.Group>\n          <Form.Label>User Story</Form.Label>\n          <Form.Control\n            id='story-input'\n            type=\"text\"\n            name=\"userstory\"\n            value={story}\n            placeholder=\"New user story\"\n            onChange={({ target }) => setStory(target.value)}\n          />\n          <Form.Label>Priority</Form.Label>\n          <Form.Control\n            id='priority-input'\n            type=\"number\"\n            name=\"priority\"\n            value={priority}\n            placeholder=\"Priority\"\n            onChange={({ target }) => setPriority(target.value)}\n          />\n          <Form.Label>Storypoints</Form.Label>\n          <Form.Control\n            id='storypoint-input'\n            type=\"number\"\n            name=\"storypoints\"\n            value={storypoints}\n            placeholder=\"Storypoints\"\n            onChange={({ target }) => setStorypoints(target.value)}\n          />\n          <div>Status</div>\n          <p>\n            <select\n              id='status-dropdown'\n              value={status}\n              onChange={({ target }) => setStatus(target.value)}\n            >\n              <option value='new'>new</option>\n              <option value='planned'>planned</option>\n              <option value='done'>done</option>\n            </select>\n          </p>\n          <Button variant=\"success\" type=\"submit\">\n            Add new story\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\nexport default AddUserStory","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst Login = ({ handleLogin }) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n\n  const login = (event) => {\n    event.preventDefault()\n    alert('logging in...')\n    handleLogin(username, password)\n    setUsername('')\n    setPassword('')\n\n  }\n  return (\n    <div className=\"addTaskForm\">\n      <h2>Login</h2>\n      <Form onSubmit={login}>\n        <Form.Group>\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            id='username-input'\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            onChange={({ target }) => setUsername(target.value)}\n          />\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            id='password-input'\n            type=\"password\"\n            name=\"pasword\"\n            value={password}\n            onChange={({ target }) => setPassword(target.value)}\n          />\n          <Button variant=\"success\" type=\"submit\">\n            Login\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\nexport default Login","import axios from 'axios'\nconst baseUrl = '/api/userstories'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  return axios.post(baseUrl, newObject, config)\n}\n\nconst update = (id, newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  console.log('id:', id)\n  console.log(newObject)\n  console.log(`${baseUrl}/${id}`, newObject)\n  //const request = axios.put(`${baseUrl}/${id}`, newObject)\n  //console.log(request)\n  //return request.then(response => response.data)\n  //return axios.put(`${baseUrl}/${id}`, newObject)\n  const request = axios.put(`${baseUrl}/${id}`, newObject, config)\n  return request.then(response => response.data)\n}\n\nconst remove = id => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const request = axios.delete(`${baseUrl}/${id}`, config)\n  return request.then(response => response.data)\n}\n\nconst addTask = (id, task) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const request = axios.post(`${baseUrl}/${id}/tasks`, task, config)\n  return request.then(response => response.data)\n}\n\nconst addComment = (id, comment) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const request = axios.post(`${baseUrl}/${id}/comments`, comment, config)\n  return request.then(response => response.data)\n}\n\n\nexport default { getAll, create, update, remove, addTask, addComment, setToken }","import axios from 'axios'\nconst baseUrl = '/api/sprintbacklogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  return axios.post(baseUrl, newObject, config)\n}\n\nconst addStory = (id, story) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const request = axios.post(`${baseUrl}/${id}/stories`, story, config)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, addStory, setToken }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst AddMaintenanceStory = ({ backlog, createMaintenanceStory }) => {\n  const [story, setStory] = useState('')\n  const [priority, setPriority] = useState(99)\n  const [status, setStatus] = useState('new')\n\n\n  const addStory = async (event) => {\n    event.preventDefault()\n    // console.log(story)\n    const newStoryObject = {\n      story: story,\n      priority: priority,\n      storypoints: 0,\n      status: status,\n      type: 'other'\n    }\n    createMaintenanceStory(newStoryObject, backlog)\n\n    setStory('')\n    setPriority(99)\n    setStatus('new')\n\n  }\n  return (\n    <div className=\"addUserStoryForm\">\n      <h2>Add maintenance story</h2>\n      <Form onSubmit={addStory}>\n        <Form.Group>\n          <Form.Label>User Story</Form.Label>\n          <Form.Control\n            id='story-input'\n            type=\"text\"\n            name=\"userstory\"\n            value={story}\n            placeholder=\"New user story\"\n            onChange={({ target }) => setStory(target.value)}\n          />\n          <Form.Label>Priority</Form.Label>\n          <Form.Control\n            id='priority-input'\n            type=\"number\"\n            name=\"priority\"\n            value={priority}\n            placeholder=\"Priority\"\n            onChange={({ target }) => setPriority(target.value)}\n          />\n          <div>Status</div>\n          <p>\n            <select\n              id='status-dropdown'\n              value={status}\n              onChange={({ target }) => setStatus(target.value)}\n            >\n              <option value='new'>new</option>\n              <option value='planned'>planned</option>\n              <option value='done'>done</option>\n            </select>\n          </p>\n          <Button variant=\"success\" type=\"submit\">\n            Add new story\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\nexport default AddMaintenanceStory","import React from 'react'\nimport { Table, Button } from 'react-bootstrap'\nimport UserStory from './UserStory'\nimport AddMaintenanceStory from './AddMaintenanceStory'\nimport { Link } from 'react-router-dom'\n\nconst SprintBacklog = ({ backlog, backlogs, addStoryToSprintBacklog, deleteUserStory, createMaintenanceStory }) => {\n  if (!backlog) {\n    return null\n  }\n  return (\n    <div>\n      <h2>Sprint Backlog for {backlog.name}</h2>\n      <Table striped hover>\n        <tbody>\n          {backlog.userstories.map(story =>\n            <tr key={story.id}>\n              <td>\n                <UserStory\n                  userstory={story}\n                  backlogs={backlogs}\n                  addStoryToSprintBacklog={addStoryToSprintBacklog}\n                  storyView={null}\n                />\n              </td>\n              <td>\n                <p>\n                  <Link to={`/userstories/${story.id}`} className=\"btn btn-success\">Info</Link>\n                </p>\n                <p>\n                  <Button variant=\"danger\" onClick={() => deleteUserStory(story.id)}>delete</Button>\n                </p>\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n      <AddMaintenanceStory backlog={backlog} createMaintenanceStory={createMaintenanceStory} />\n    </div>\n  )\n}\n\nexport default SprintBacklog","import React, { useState, useEffect } from 'react'\nimport ProductBacklog from './components/ProductBacklog'\nimport SprintBacklogList from './components/SprintBacklogList'\nimport AddUserStory from './components/AddUserStory'\nimport LoginForm from './components/loginForm'\n//import ModifyUserStory from './components/ModifyUserStory'\nimport storyService from './services/userstories'\nimport backlogService from './services/sprintbacklogs'\nimport loginService from './services/login'\n\nimport {\n  Switch, Route, Link, useRouteMatch\n} from 'react-router-dom'\nimport SprintBacklog from './components/SprintBacklog'\nimport UserStory from './components/UserStory'\n//import { Button } from 'react-bootstrap'\n\nconst App = () => {\n  const [stories, setStories] = useState([])\n  const [backlogs, setBacklogs] = useState([])\n  const [user, setUser] = useState(null)\n\n\n  useEffect(() => {\n    //console.log('use effect!')\n    storyService\n      .getAll()\n      .then(initialStories => {\n        setStories(initialStories)\n      })\n    backlogService\n      .getAll()\n      .then(initialBacklogs => {\n        setBacklogs(initialBacklogs)\n      })\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedScrumtrackerappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      storyService.setToken(user.token)\n      backlogService.setToken(user.token)\n    }\n  }, [])\n\n\n  const handleLogin = async (username, password) => {\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n      window.localStorage.setItem(\n        'loggedScrumtrackerappUser', JSON.stringify(user)\n      )\n      setUser(user)\n      storyService.setToken(user.token)\n      backlogService.setToken(user.token)\n    } catch (exception) {\n      alert('wrong credentials')\n    }\n  }\n\n  const createUserStory = async (userStoryObject) => {\n    await storyService\n      .create(userStoryObject)\n      .then(response => {\n        setStories(stories.concat(response.data))\n      })\n\n  }\n\n  const createMaintenanceStory = async (userStoryObject, backlog) => {\n    await storyService\n      .create(userStoryObject)\n      .then(response => {\n        setStories(stories.concat(response.data))\n        addStoryToSprintBacklog(response.data, backlog.id)\n      })\n\n  }\n\n  const deleteUserStory = (id) => {\n    //console.log('Story ' + id + ' will be removed...')\n    storyService\n      .remove(id)\n      // eslint-disable-next-line no-unused-vars\n      .then(response => {\n        setStories(stories.filter(s => s.id !== id))\n      })\n  }\n\n  const updateUserStory = (id, newPriority, newStatus, newStorypoints) => {\n    // console.log('id:', id)\n    // console.log('newPriority:', newPriority)\n    // console.log('newStatus:', newStatus)\n    if (id) {\n      const story = stories.find(s => s.id === id)\n      //let changedStory = { ...story }\n      let newData = {\n        priority: story.priority,\n        storypoints: story.storypoints,\n        status: story.status\n      }\n      if (newData.priority !== newPriority) {\n        newData = { ...newData, priority: newPriority }\n      }\n      if (newData.storypoints !== newStorypoints) {\n        newData = { ...newData, storypoints: newStorypoints }\n      }\n      if (newData.status !== newStatus) {\n        newData = { ...newData, status: newStatus }\n      }\n\n      storyService\n        .update(id, newData)\n        .then(returnedStory => {\n          console.log(returnedStory)\n          setStories(stories.map(s => s.id !== id ? s : returnedStory))\n        })\n    }\n  }\n\n  const createSprintBacklog = (backlogObject) => {\n    backlogService\n      .create(backlogObject)\n      .then(response => {\n        setBacklogs(backlogs.concat(response.data))\n      })\n\n  }\n\n  const addStoryToSprintBacklog = async (storyObject, backlog) => {\n    console.log(storyObject)\n    if (backlog !== '') {\n      const backlogToAdd = backlogs.find(b => b.id === backlog)\n      console.log(backlogToAdd)\n      if (!backlogToAdd.userstories.find(s => s.id === storyObject.id)) {\n        await backlogService\n          .addStory(backlog, storyObject)\n          .then(response => {\n            //console.log(response)\n            //console.log(backlogs)\n            setBacklogs(backlogs.map(b => b.id !== backlog ? b : response))\n          })\n        alert('Story \"' + storyObject.story + '\" added to sprint backlog ' + backlogToAdd.name)\n\n      } else {\n        alert('Story \"' + storyObject.story + '\" already in sprint backlog ' + backlogToAdd.name)\n      }\n\n    } else {\n      alert('Select backlog from the dropdown menu')\n    }\n\n  }\n\n  const addTaskToStory = async (taskObject, story) => {\n    const storyToAdd = stories.find(st => st.id === story)\n\n    await storyService\n      .addTask(story, taskObject)\n      .then(response => {\n        setStories(stories.map(s => s.id !== story ? s : response))\n      })\n    alert('Task \"' + taskObject.name + '\" added to story ' + storyToAdd.story)\n\n  }\n\n  const addCommentToStory = async (commentObject, story) => {\n    const storyToAdd = stories.find(st => st.id === story)\n\n    await storyService\n      .addComment(story, commentObject)\n      .then(response => {\n        setStories(stories.map(s => s.id !== story ? s : response))\n      })\n    alert('Comment \"' + commentObject.commentText + '\" added to story ' + storyToAdd.story)\n\n  }\n\n\n\n\n  const padding = {\n    padding: 5\n  }\n\n  const match = useRouteMatch('/sprintbacklogs/:id')\n  const backlog = match\n    ? backlogs.find(b => b.id === match.params.id)\n    : null\n\n  //console.log(stories)\n  const matchStory = useRouteMatch('/userstories/:id')\n  //console.log(matchStory)\n  const userstory = matchStory\n    ? stories.find(s => s.id === matchStory.params.id)\n    : null\n\n  //console.log(stories)\n\n  if (user === null) {\n    return (\n      <LoginForm handleLogin={handleLogin}/>\n    )\n  } else {\n\n    return (\n      <div className=\"container\">\n        <div>\n          <Link style={padding} to=\"/\">product backlog</Link>\n          <Link style={padding} to=\"/sprintbacklogs\">sprint backlogs</Link>\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-primary\"\n            onClick={() => {\n              window.localStorage.clear()\n              setUser(null)\n            }}\n          >Logout</button>\n        </div>\n\n        <Switch>\n          <Route path=\"/sprintbacklogs/:id\">\n            <SprintBacklog\n              backlog={backlog}\n              backlogs={backlogs}\n              addStoryToSprintBacklog={addStoryToSprintBacklog}\n              deleteUserStory={deleteUserStory}\n              createMaintenanceStory={createMaintenanceStory}\n            />\n          </Route>\n          <Route path=\"/userstories/:id\">\n            <UserStory\n              userstory={userstory}\n              backlogs={backlogs}\n              addStoryToSprintBacklog={addStoryToSprintBacklog}\n              updateUserStory={updateUserStory}\n              storyView={''}\n              addTaskToStory={addTaskToStory}\n              addCommentToStory={addCommentToStory}\n            />\n          </Route>\n          <Route path=\"/sprintbacklogs\">\n            <SprintBacklogList\n              backlogs={backlogs}\n              createSprintBacklog={createSprintBacklog} />\n          </Route>\n          <Route path=\"/\">\n            <ProductBacklog\n              stories={stories}\n              deleteUserStory={deleteUserStory}\n              backlogs={backlogs}\n              addStoryToSprintBacklog={addStoryToSprintBacklog} />\n            <AddUserStory createNewStory={createUserStory} />\n            {/* <ModifyUserStory stories={stories} updateUserStory={updateUserStory} /> */}\n          </Route>\n        </Switch>\n      </div>\n    )\n\n  }\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport {\n  BrowserRouter as Router\n} from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n)"],"sourceRoot":""}