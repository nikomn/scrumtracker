{"version":3,"sources":["components/UserStory.js","components/ProductBacklog.js","components/AddUserStory.js","components/ModifyUserStory.js","services/userstories.js","App.js","index.js"],"names":["UserStory","userstory","className","story","priority","status","ProductBacklog","stories","deleteUserStory","Table","striped","hover","map","Button","variant","size","onClick","id","AddUserStory","createNewStory","useState","setStory","setPriority","setStatus","Form","onSubmit","event","preventDefault","Group","Label","Control","type","name","value","placeholder","onChange","target","ModifyUserStory","updateUserStory","newPriority","setNewPriority","newStatus","setNewStatus","storyID","filter","s","toLowerCase","baseUrl","axios","get","then","response","data","newObject","post","console","log","put","delete","App","setStories","useEffect","storyService","initialStories","userStoryObject","concat","find","changedStory","returnedStory","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.364cb072.chunk.js","sourcesContent":["import React from 'react'\n\nconst UserStory = ({ userstory }) => {\n  return (\n    <div className='userstory'>\n      <p>\n        <b>User Story:</b> {userstory.story} <br />\n        <b>Priority:</b> {userstory.priority} <br />\n        <b>Status:</b> {userstory.status}\n      </p>\n    </div>\n  )\n}\n\nexport default UserStory","import React from 'react'\nimport { Table, Button } from 'react-bootstrap'\nimport UserStory from './UserStory'\n\nconst ProductBacklog = ({ stories, deleteUserStory }) => {\n  return (\n    <div>\n      <h2>Product Backlog</h2>\n      <Table striped hover>\n        <tbody>\n          {stories.map(story =>\n            <tr key={story.id}>\n              <td>\n                <UserStory userstory={story} />\n              </td>\n              <td>\n                <Button variant=\"danger\" size=\"lg\" onClick={() => deleteUserStory(story.id)}>delete</Button>\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nexport default ProductBacklog","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst AddUserStory = ({ createNewStory }) => {\n  const [story, setStory] = useState('')\n  const [priority, setPriority] = useState(99)\n  const [status, setStatus] = useState('new')\n\n\n  const addStory = (event) => {\n    event.preventDefault()\n    // console.log(story)\n    const newStoryObject = {\n      story: story,\n      priority: priority,\n      status: status\n    }\n    createNewStory(newStoryObject)\n    setStory('')\n    setPriority(99)\n    setStatus('new')\n\n  }\n  return (\n    <div className=\"addUserStoryForm\">\n      <h2>Add new User Story</h2>\n      <Form onSubmit={addStory}>\n        <Form.Group>\n          <Form.Label>User Story</Form.Label>\n          <Form.Control\n            id='story-input'\n            type=\"text\"\n            name=\"userstory\"\n            value={story}\n            placeholder=\"New user story\"\n            onChange={({ target }) => setStory(target.value)}\n          />\n          <Form.Label>Priority</Form.Label>\n          <Form.Control\n            id='priority-input'\n            type=\"number\"\n            name=\"priority\"\n            value={priority}\n            placeholder=\"Priority\"\n            onChange={({ target }) => setPriority(target.value)}\n          />\n          <Form.Label>Status</Form.Label>\n          <Form.Control\n            id='status-input'\n            type=\"text\"\n            name=\"status\"\n            value={status}\n            placeholder=\"Status\"\n            onChange={({ target }) => setStatus(target.value)}\n          />\n          <Button variant=\"success\" type=\"submit\">\n            Add new story\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\nexport default AddUserStory","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst ModifyUserStory = ( { stories, updateUserStory }) => {\n  const [story, setStory] = useState('')\n  const [newPriority, setNewPriority] = useState('')\n  const [newStatus, setNewStatus] = useState('')\n\n\n  const modifyStory = (event) => {\n    event.preventDefault()\n    //console.log(stories)\n    const storyID = stories.filter(s => s.story.toLowerCase() === story.toLowerCase())\n    //console.log(storyID)\n    if (storyID[0]) {\n      const id = storyID[0].id\n      updateUserStory(id, newPriority, newStatus)\n    } else {\n      updateUserStory(null, newPriority, newStatus)\n    }\n\n\n    setStory('')\n    setNewPriority('')\n    setNewStatus('')\n\n  }\n  return (\n    <div className=\"addUserStoryForm\">\n      <h2>Modify User Story</h2>\n      <Form onSubmit={modifyStory}>\n        <Form.Group>\n          <Form.Label>User Story to modify</Form.Label>\n          <Form.Control\n            id='modify-story-input'\n            type=\"text\"\n            name=\"userstory\"\n            value={story}\n            placeholder=\"User Story to modify\"\n            onChange={({ target }) => setStory(target.value)}\n          />\n          <Form.Label>New priority</Form.Label>\n          <Form.Control\n            id='modify-priority-input'\n            type=\"number\"\n            name=\"priority\"\n            value={newPriority}\n            placeholder=\"New priority\"\n            onChange={({ target }) => setNewPriority(target.value)}\n          />\n          <Form.Label>New Status</Form.Label>\n          <Form.Control\n            id='modify-status-input'\n            type=\"text\"\n            name=\"status\"\n            value={newStatus}\n            placeholder=\"New Status\"\n            onChange={({ target }) => setNewStatus(target.value)}\n          />\n          <Button variant=\"success\" type=\"submit\">\n          Update story\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\nexport default ModifyUserStory","import axios from 'axios'\nconst baseUrl = '/api/userstories'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n  console.log('id:', id)\n  console.log(newObject)\n  console.log(`${baseUrl}/${id}`, newObject)\n  //const request = axios.put(`${baseUrl}/${id}`, newObject)\n  //console.log(request)\n  //return request.then(response => response.data)\n  //return axios.put(`${baseUrl}/${id}`, newObject)\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport ProductBacklog from './components/ProductBacklog'\nimport AddUserStory from './components/AddUserStory'\nimport ModifyUserStory from './components/ModifyUserStory'\nimport storyService from './services/userstories'\n\n\nconst App = () => {\n  const [stories, setStories] = useState([])\n\n\n  useEffect(() => {\n    storyService\n      .getAll()\n      .then(initialStories => {\n        setStories(initialStories)\n      })\n  }, [])\n\n  const createUserStory = (userStoryObject) => {\n    storyService\n      .create(userStoryObject)\n      .then(response => {\n        setStories(stories.concat(response.data))\n      })\n\n  }\n\n  const deleteUserStory = (id) => {\n    console.log('Story ' + id + ' will be removed...')\n    storyService\n      .remove(id)\n      // eslint-disable-next-line no-unused-vars\n      .then(response => {\n        setStories(stories.filter(s => s.id !== id))\n      })\n  }\n\n  const updateUserStory = (id, newPriority, newStatus) => {\n    console.log('id:', id)\n    console.log('newPriority:', newPriority)\n    console.log('newStatus:', newStatus)\n    if (id) {\n      //const storyID = stories.filter(s => s.story.toLowerCase() === story.toLowerCase())\n      //console.log(storyID)\n      //const id = storyID[0].id\n      const story = stories.find(s => s.id === id)\n      let changedStory = { ...story }\n      //let changedStory = { ...story, status: newStatus, priority: newPriority }\n      // console.log(story)\n      // let modifiedData = null\n      if (newPriority === '' && newStatus === '') {\n        console.log('No changes made!')\n      }\n      if (newPriority !== '' && newStatus === '') {\n        console.log('Changing priority')\n        changedStory = { ...story, priority: newPriority }\n      }\n      if (newPriority === '' && newStatus !== '') {\n        console.log('Changing status')\n        changedStory = { ...story, status: newStatus }\n      }\n      if (newPriority !== '' && newStatus !== '') {\n        console.log('Changing priority and status')\n        changedStory = { ...story, status: newStatus, priority: newPriority }\n      }\n\n      storyService\n        .update(id, changedStory)\n        .then(returnedStory => {\n          console.log(returnedStory)\n          setStories(stories.map(s => s.id !== id ? s : returnedStory))\n        })\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Scrum Tracker app</h1>\n      <ProductBacklog stories={stories} deleteUserStory={deleteUserStory} />\n      <AddUserStory createNewStory={createUserStory} />\n      <ModifyUserStory stories={stories} updateUserStory={updateUserStory} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}