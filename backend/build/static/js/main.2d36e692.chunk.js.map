{"version":3,"sources":["components/UserStory.js","components/ProductBacklog.js","components/AddUserStory.js","services/userstories.js","App.js","index.js"],"names":["UserStory","userstory","className","story","ProductBacklog","stories","map","id","AddUserStory","createNewStory","useState","setStory","priority","setPriority","status","setStatus","onSubmit","event","preventDefault","type","value","onChange","target","baseUrl","axios","get","then","response","data","newObject","post","App","setStories","useEffect","storyService","initialStories","userStoryObject","concat","ReactDOM","render","document","getElementById"],"mappings":"sJAYeA,EAVG,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACnB,OACE,qBAAKC,UAAU,YAAf,SACE,4BACGD,EAAUE,WCYJC,EAfQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACxB,OACE,gCACE,iDACA,6BACGA,EAAQC,KAAI,SAAAH,GAAK,OAChB,6BACE,cAAC,EAAD,CAAWF,UAAWE,KADfA,EAAMI,aCkDVC,EAzDM,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACtB,EAA0BC,mBAAS,IAAnC,mBAAOP,EAAP,KAAcQ,EAAd,KACA,EAAgCD,mBAAS,IAAzC,mBAAOE,EAAP,KAAiBC,EAAjB,KACA,EAA4BH,mBAAS,OAArC,mBAAOI,EAAP,KAAeC,EAAf,KAiBA,OACE,qBAAKb,UAAU,mBAAf,SACE,uBAAMc,SAhBO,SAACC,GAChBA,EAAMC,iBAONT,EALuB,CACrBN,MAAOA,EACPS,SAAUA,EACVE,OAAQA,IAGVH,EAAS,IACTE,EAAY,IACZE,EAAU,QAKR,UACE,+CAGA,uBAAOR,GAAG,cACRY,KAAK,OACLC,MAAOjB,EACPkB,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBX,EAASW,EAAOF,UAE5C,gCACE,6CAGA,uBAAOb,GAAG,iBACRY,KAAK,SACLC,MAAOR,EACPS,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBT,EAAYS,EAAOF,aAGjD,gCACE,2CAGA,uBAAOb,GAAG,eACRY,KAAK,OACLC,MAAON,EACPO,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBP,EAAUO,EAAOF,aAI/C,wBAAQD,KAAK,SAAb,iC,gBCrDFI,EAAU,mBAWD,EATA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAO5B,EAJA,SAAAC,GACb,OAAOL,IAAMM,KAAKP,EAASM,IC2BdE,EA9BH,WACV,MAA8BrB,mBAAS,IAAvC,mBAAOL,EAAP,KAAgB2B,EAAhB,KAGAC,qBAAU,WACRC,IAEGR,MAAK,SAAAS,GACJH,EAAWG,QAEd,IAWH,OACE,gCACE,mDACA,cAAC,EAAD,CAAgB9B,QAASA,IACzB,cAAC,EAAD,CAAcI,eAbM,SAAC2B,GACvBF,EACUE,GACPV,MAAK,SAAAC,GACJK,EAAW3B,EAAQgC,OAAOV,EAASC,iBClB3CU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2d36e692.chunk.js","sourcesContent":["import React from 'react'\n\nconst UserStory = ({ userstory }) => {\n  return (\n    <div className='userstory'>\n      <p>\n        {userstory.story}\n      </p>\n    </div>\n  )\n}\n\nexport default UserStory","import React from 'react'\nimport UserStory from './UserStory'\n\nconst ProductBacklog = ({ stories }) => {\n  return (\n    <div>\n      <h2>Product Backlog</h2>\n      <ul>\n        {stories.map(story =>\n          <li key={story.id}>\n            <UserStory userstory={story} />\n          </li>\n        )}\n      </ul>\n    </div>\n  )\n}\n\nexport default ProductBacklog","import React, { useState } from 'react'\n\nconst AddUserStory = ({ createNewStory }) => {\n  const [story, setStory] = useState('')\n  const [priority, setPriority] = useState(99)\n  const [status, setStatus] = useState('new')\n\n\n  const addStory = (event) => {\n    event.preventDefault()\n    // console.log(story)\n    const newStoryObject = {\n      story: story,\n      priority: priority,\n      status: status\n    }\n    createNewStory(newStoryObject)\n    setStory('')\n    setPriority(99)\n    setStatus('new')\n\n  }\n  return (\n    <div className=\"addUserStoryForm\">\n      <form onSubmit={addStory}>\n        <label>\n            User Story\n        </label>\n        <input id='story-input'\n          type='text'\n          value={story}\n          onChange={({ target }) => setStory(target.value)}\n        />\n        <div>\n          <label>\n            Priority\n          </label>\n          <input id='priority-input'\n            type='number'\n            value={priority}\n            onChange={({ target }) => setPriority(target.value)}\n          />\n        </div>\n        <div>\n          <label>\n            Status\n          </label>\n          <input id='status-input'\n            type='text'\n            value={status}\n            onChange={({ target }) => setStatus(target.value)}\n          />\n        </div>\n\n        <button type='submit'>Add new story</button>\n      </form>\n    </div>\n  )\n}\nexport default AddUserStory","import axios from 'axios'\nconst baseUrl = '/api/userstories'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nexport default { getAll, create }","import React, { useState, useEffect } from 'react'\nimport ProductBacklog from './components/ProductBacklog'\nimport AddUserStory from './components/AddUserStory'\nimport storyService from './services/userstories'\n\n\nconst App = () => {\n  const [stories, setStories] = useState([])\n\n\n  useEffect(() => {\n    storyService\n      .getAll()\n      .then(initialStories => {\n        setStories(initialStories)\n      })\n  }, [])\n\n  const createUserStory = (userStoryObject) => {\n    storyService\n      .create(userStoryObject)\n      .then(response => {\n        setStories(stories.concat(response.data))\n      })\n\n  }\n\n  return (\n    <div>\n      <h1>Scrum Tracker app</h1>\n      <ProductBacklog stories={stories} />\n      <AddUserStory createNewStory={createUserStory} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}