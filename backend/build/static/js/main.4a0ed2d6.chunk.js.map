{"version":3,"sources":["components/UserStory.js","components/ProductBacklog.js","components/AddUserStory.js","components/ModifyUserStory.js","services/userstories.js","App.js","index.js"],"names":["UserStory","userstory","className","story","priority","status","ProductBacklog","stories","deleteUserStory","map","onClick","id","AddUserStory","createNewStory","useState","setStory","setPriority","setStatus","onSubmit","event","preventDefault","type","value","onChange","target","ModifyUserStory","updateUserStory","newPriority","setNewPriority","newStatus","setNewStatus","storyID","filter","s","toLowerCase","baseUrl","axios","get","then","response","data","newObject","post","console","log","put","delete","App","setStories","useEffect","storyService","initialStories","userStoryObject","concat","find","changedStory","returnedStory","ReactDOM","render","document","getElementById"],"mappings":"6JAceA,EAZG,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACnB,OACE,qBAAKC,UAAU,YAAf,SACE,6CACeD,EAAUE,MADzB,IACgC,uBADhC,aAEaF,EAAUG,SAFvB,IAEiC,uBAFjC,WAGWH,EAAUI,aCWZC,EAhBQ,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACjC,OACE,gCACE,iDACA,6BACGD,EAAQE,KAAI,SAAAN,GAAK,OAChB,+BACE,cAAC,EAAD,CAAWF,UAAWE,IACtB,wBAAQO,QAAS,kBAAMF,EAAgBL,EAAMQ,KAA7C,sBAFOR,EAAMQ,aCmDVC,EA1DM,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACtB,EAA0BC,mBAAS,IAAnC,mBAAOX,EAAP,KAAcY,EAAd,KACA,EAAgCD,mBAAS,IAAzC,mBAAOV,EAAP,KAAiBY,EAAjB,KACA,EAA4BF,mBAAS,OAArC,mBAAOT,EAAP,KAAeY,EAAf,KAiBA,OACE,sBAAKf,UAAU,mBAAf,UACE,oDACA,uBAAMgB,SAjBO,SAACC,GAChBA,EAAMC,iBAONP,EALuB,CACrBV,MAAOA,EACPC,SAAUA,EACVC,OAAQA,IAGVU,EAAS,IACTC,EAAY,IACZC,EAAU,QAMR,UACE,+CAGA,uBAAON,GAAG,cACRU,KAAK,OACLC,MAAOnB,EACPoB,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBT,EAASS,EAAOF,UAE5C,gCACE,6CAGA,uBAAOX,GAAG,iBACRU,KAAK,SACLC,MAAOlB,EACPmB,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBR,EAAYQ,EAAOF,aAGjD,gCACE,2CAGA,uBAAOX,GAAG,eACRU,KAAK,OACLC,MAAOjB,EACPkB,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBP,EAAUO,EAAOF,aAI/C,wBAAQD,KAAK,SAAb,kCCSOI,EA9DS,SAAC,GAAmC,IAAhClB,EAA+B,EAA/BA,QAASmB,EAAsB,EAAtBA,gBACnC,EAA0BZ,mBAAS,IAAnC,mBAAOX,EAAP,KAAcY,EAAd,KACA,EAAsCD,mBAAS,IAA/C,mBAAOa,EAAP,KAAoBC,EAApB,KACA,EAAkCd,mBAAS,IAA3C,mBAAOe,EAAP,KAAkBC,EAAlB,KAqBA,OACE,sBAAK5B,UAAU,mBAAf,UACE,mDACA,uBAAMgB,SArBU,SAACC,GACnBA,EAAMC,iBAEN,IAAMW,EAAUxB,EAAQyB,QAAO,SAAAC,GAAC,OAAIA,EAAE9B,MAAM+B,gBAAkB/B,EAAM+B,iBAEpE,GAAIH,EAAQ,GAAI,CACd,IAAMpB,EAAKoB,EAAQ,GAAGpB,GACtBe,EAAgBf,EAAIgB,EAAaE,QAEjCH,EAAgB,KAAMC,EAAaE,GAIrCd,EAAS,IACTa,EAAe,IACfE,EAAa,KAMX,UACE,yDAGA,uBAAOnB,GAAG,qBACRU,KAAK,OACLC,MAAOnB,EACPoB,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBT,EAASS,EAAOF,UAE5C,gCACE,iDAGA,uBAAOX,GAAG,wBACRU,KAAK,SACLC,MAAOK,EACPJ,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBI,EAAeJ,EAAOF,aAGpD,gCACE,+CAGA,uBAAOX,GAAG,sBACRU,KAAK,OACLC,MAAOO,EACPN,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBM,EAAaN,EAAOF,aAIlD,wBAAQD,KAAK,SAAb,iC,gBC1DFc,EAAU,mBA4BD,EA1BA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAwB5B,EArBA,SAAAC,GACb,OAAOL,IAAMM,KAAKP,EAASM,IAoBd,EAjBA,SAAC9B,EAAI8B,GASlB,OARAE,QAAQC,IAAI,MAAOjC,GACnBgC,QAAQC,IAAIH,GACZE,QAAQC,IAAR,UAAeT,EAAf,YAA0BxB,GAAM8B,GAKhBL,IAAMS,IAAN,UAAaV,EAAb,YAAwBxB,GAAM8B,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAAA7B,GAEb,OADgByB,IAAMU,OAAN,UAAgBX,EAAhB,YAA2BxB,IAC5B2B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SC4D5BO,EA/EH,WACV,MAA8BjC,mBAAS,IAAvC,mBAAOP,EAAP,KAAgByC,EAAhB,KAGAC,qBAAU,WACRC,IAEGZ,MAAK,SAAAa,GACJH,EAAWG,QAEd,IA2DH,OACE,gCACE,mDACA,cAAC,EAAD,CAAgB5C,QAASA,EAASC,gBAnDd,SAACG,GACvBgC,QAAQC,IAAI,SAAWjC,EAAK,uBAC5BuC,EACUvC,GAEP2B,MAAK,SAAAC,GACJS,EAAWzC,EAAQyB,QAAO,SAAAC,GAAC,OAAIA,EAAEtB,KAAOA,YA8C1C,cAAC,EAAD,CAAcE,eA7DM,SAACuC,GACvBF,EACUE,GACPd,MAAK,SAAAC,GACJS,EAAWzC,EAAQ8C,OAAOd,EAASC,aA0DrC,cAAC,EAAD,CAAiBjC,QAASA,EAASmB,gBA3Cf,SAACf,EAAIgB,EAAaE,GAIxC,GAHAc,QAAQC,IAAI,MAAOjC,GACnBgC,QAAQC,IAAI,eAAgBjB,GAC5BgB,QAAQC,IAAI,aAAcf,GACtBlB,EAAI,CAIN,IAAMR,EAAQI,EAAQ+C,MAAK,SAAArB,GAAC,OAAIA,EAAEtB,KAAOA,KACrC4C,EAAY,eAAQpD,GAIJ,KAAhBwB,GAAoC,KAAdE,GACxBc,QAAQC,IAAI,oBAEM,KAAhBjB,GAAoC,KAAdE,IACxBc,QAAQC,IAAI,qBACZW,EAAY,2BAAQpD,GAAR,IAAeC,SAAUuB,KAEnB,KAAhBA,GAAoC,KAAdE,IACxBc,QAAQC,IAAI,mBACZW,EAAY,2BAAQpD,GAAR,IAAeE,OAAQwB,KAEjB,KAAhBF,GAAoC,KAAdE,IACxBc,QAAQC,IAAI,gCACZW,EAAY,2BAAQpD,GAAR,IAAeE,OAAQwB,EAAWzB,SAAUuB,KAG1DuB,EACUvC,EAAI4C,GACXjB,MAAK,SAAAkB,GACJb,QAAQC,IAAIY,GACZR,EAAWzC,EAAQE,KAAI,SAAAwB,GAAC,OAAIA,EAAEtB,KAAOA,EAAKsB,EAAIuB,iBCnExDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4a0ed2d6.chunk.js","sourcesContent":["import React from 'react'\n\nconst UserStory = ({ userstory }) => {\n  return (\n    <div className='userstory'>\n      <p>\n        User Story: {userstory.story} <br />\n        Priority: {userstory.priority} <br />\n        Status: {userstory.status}\n      </p>\n    </div>\n  )\n}\n\nexport default UserStory","import React from 'react'\nimport UserStory from './UserStory'\n\nconst ProductBacklog = ({ stories, deleteUserStory }) => {\n  return (\n    <div>\n      <h2>Product Backlog</h2>\n      <ul>\n        {stories.map(story =>\n          <li key={story.id}>\n            <UserStory userstory={story} />\n            <button onClick={() => deleteUserStory(story.id)}>delete</button>\n          </li>\n        )}\n      </ul>\n    </div>\n  )\n}\n\nexport default ProductBacklog","import React, { useState } from 'react'\n\nconst AddUserStory = ({ createNewStory }) => {\n  const [story, setStory] = useState('')\n  const [priority, setPriority] = useState(99)\n  const [status, setStatus] = useState('new')\n\n\n  const addStory = (event) => {\n    event.preventDefault()\n    // console.log(story)\n    const newStoryObject = {\n      story: story,\n      priority: priority,\n      status: status\n    }\n    createNewStory(newStoryObject)\n    setStory('')\n    setPriority(99)\n    setStatus('new')\n\n  }\n  return (\n    <div className=\"addUserStoryForm\">\n      <h2>Add new User Story</h2>\n      <form onSubmit={addStory}>\n        <label>\n            User Story\n        </label>\n        <input id='story-input'\n          type='text'\n          value={story}\n          onChange={({ target }) => setStory(target.value)}\n        />\n        <div>\n          <label>\n            Priority\n          </label>\n          <input id='priority-input'\n            type='number'\n            value={priority}\n            onChange={({ target }) => setPriority(target.value)}\n          />\n        </div>\n        <div>\n          <label>\n            Status\n          </label>\n          <input id='status-input'\n            type='text'\n            value={status}\n            onChange={({ target }) => setStatus(target.value)}\n          />\n        </div>\n\n        <button type='submit'>Add new story</button>\n      </form>\n    </div>\n  )\n}\nexport default AddUserStory","import React, { useState } from 'react'\n\nconst ModifyUserStory = ( { stories, updateUserStory }) => {\n  const [story, setStory] = useState('')\n  const [newPriority, setNewPriority] = useState('')\n  const [newStatus, setNewStatus] = useState('')\n\n\n  const modifyStory = (event) => {\n    event.preventDefault()\n    //console.log(stories)\n    const storyID = stories.filter(s => s.story.toLowerCase() === story.toLowerCase())\n    //console.log(storyID)\n    if (storyID[0]) {\n      const id = storyID[0].id\n      updateUserStory(id, newPriority, newStatus)\n    } else {\n      updateUserStory(null, newPriority, newStatus)\n    }\n\n\n    setStory('')\n    setNewPriority('')\n    setNewStatus('')\n\n  }\n  return (\n    <div className=\"addUserStoryForm\">\n      <h2>Modify User Story</h2>\n      <form onSubmit={modifyStory}>\n        <label>\n            User Story to modify\n        </label>\n        <input id='modify-story-input'\n          type='text'\n          value={story}\n          onChange={({ target }) => setStory(target.value)}\n        />\n        <div>\n          <label>\n            New priority\n          </label>\n          <input id='modify-priority-input'\n            type='number'\n            value={newPriority}\n            onChange={({ target }) => setNewPriority(target.value)}\n          />\n        </div>\n        <div>\n          <label>\n            New Status\n          </label>\n          <input id='modify-status-input'\n            type='text'\n            value={newStatus}\n            onChange={({ target }) => setNewStatus(target.value)}\n          />\n        </div>\n\n        <button type='submit'>Update story</button>\n      </form>\n    </div>\n  )\n}\nexport default ModifyUserStory","import axios from 'axios'\nconst baseUrl = '/api/userstories'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n  console.log('id:', id)\n  console.log(newObject)\n  console.log(`${baseUrl}/${id}`, newObject)\n  //const request = axios.put(`${baseUrl}/${id}`, newObject)\n  //console.log(request)\n  //return request.then(response => response.data)\n  //return axios.put(`${baseUrl}/${id}`, newObject)\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport ProductBacklog from './components/ProductBacklog'\nimport AddUserStory from './components/AddUserStory'\nimport ModifyUserStory from './components/ModifyUserStory'\nimport storyService from './services/userstories'\n\n\nconst App = () => {\n  const [stories, setStories] = useState([])\n\n\n  useEffect(() => {\n    storyService\n      .getAll()\n      .then(initialStories => {\n        setStories(initialStories)\n      })\n  }, [])\n\n  const createUserStory = (userStoryObject) => {\n    storyService\n      .create(userStoryObject)\n      .then(response => {\n        setStories(stories.concat(response.data))\n      })\n\n  }\n\n  const deleteUserStory = (id) => {\n    console.log('Story ' + id + ' will be removed...')\n    storyService\n      .remove(id)\n      // eslint-disable-next-line no-unused-vars\n      .then(response => {\n        setStories(stories.filter(s => s.id !== id))\n      })\n  }\n\n  const updateUserStory = (id, newPriority, newStatus) => {\n    console.log('id:', id)\n    console.log('newPriority:', newPriority)\n    console.log('newStatus:', newStatus)\n    if (id) {\n      //const storyID = stories.filter(s => s.story.toLowerCase() === story.toLowerCase())\n      //console.log(storyID)\n      //const id = storyID[0].id\n      const story = stories.find(s => s.id === id)\n      let changedStory = { ...story }\n      //let changedStory = { ...story, status: newStatus, priority: newPriority }\n      // console.log(story)\n      // let modifiedData = null\n      if (newPriority === '' && newStatus === '') {\n        console.log('No changes made!')\n      }\n      if (newPriority !== '' && newStatus === '') {\n        console.log('Changing priority')\n        changedStory = { ...story, priority: newPriority }\n      }\n      if (newPriority === '' && newStatus !== '') {\n        console.log('Changing status')\n        changedStory = { ...story, status: newStatus }\n      }\n      if (newPriority !== '' && newStatus !== '') {\n        console.log('Changing priority and status')\n        changedStory = { ...story, status: newStatus, priority: newPriority }\n      }\n\n      storyService\n        .update(id, changedStory)\n        .then(returnedStory => {\n          console.log(returnedStory)\n          setStories(stories.map(s => s.id !== id ? s : returnedStory))\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h1>Scrum Tracker app</h1>\n      <ProductBacklog stories={stories} deleteUserStory={deleteUserStory} />\n      <AddUserStory createNewStory={createUserStory} />\n      <ModifyUserStory stories={stories} updateUserStory={updateUserStory} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}